####################################################
# Definition of filter prototypes for use in listconfiguration
#
# @author Daniel Lienert <lienert@punkt.de> Michael Knoll <knoll@punkt.de>
# @package Typo3
# @subpackage pt_extlist
####################################################

plugin.tx_ptextlist.prototype.filter {

	string {
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_StringFilter
		partialPath = Filter/String/StringFilter
		defaultValue =
		accessGroups =

		maxLength = 
		size = 

		breadCrumbString = TEXT
		breadCrumbString {
			# Fields that can be used are 'label' and 'value'
			dataWrap = {field:label} equals {field:value}
		}
	}



    fullText {
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_FullTextFilter
		partialPath = Filter/String/StringFilter
		defaultValue =
		accessGroups =

        # MySQL Specific Parameters
        minWordLength = 4
        booleanMode = 0
        booleanModeWrapWithStars = 1

		maxLength =
		size =

		breadCrumbString = TEXT
		breadCrumbString {
			# Fields that can be used are 'label' and 'value'
			dataWrap = Searchstring: {field:value}
		}
	}



	max {
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_MaxFilter
		partialPath = Filter/Range/MaxFilter
		defaultValue =
		accessGroups =
		#validation.maxValue = 500
		#validation.minValue = 0

		breadCrumbString = TEXT
		breadCrumbString {
			# Fields that can be used here are 'label', 'value', 'minValue' and 'maxValue' (if there are set before!)
			dataWrap = {field:label} is less than {field:value}
		}
	}



	min {
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_MinFilter
		partialPath = Filter/Range/MinFilter
		defaultValue =
		accessGroups =
		#validation.maxValue = 500
		#validation.minValue = 0

		breadCrumbString = TEXT
		breadCrumbString {
			# Fields that can be used here are 'label', 'value', 'minValue' and 'maxValue' (if there are set before!)
			dataWrap = {field:label} is bigger than {field:value}
		}
	}



	timeSpan {
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_TimeSpanFilter
		partialPath = Filter/Range/TimeSpanFilter

		defaultValue {
		    start =
		    end = 
		}

        fieldIdentifier {
            10 {
                start =
                end = 
            }
        }

        dbTimeFormat = U

        accessGroups =

		breadCrumbString = TEXT
		breadCrumbString {
			# Fields that can be used here are 'label', 'value', 'minValue' and 'maxValue' (if there are set before!)
			dataWrap = {field:label} is between {field:fromValue} and {field:toValue}
		}
	}



	dateSelect < timeSpan
	dateSelect {
	    dataProviderClassName = Tx_PtExtlist_Domain_Model_Filter_DataProvider_TimeSpan
	    partialPath = Filter/Options/SelectFilter

	    dateStart =
	    dateEnd = 
	    dateIncrement =

	    dateFormat = 
	}



	select {
		partialPath = Filter/Options/SelectFilter
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_SelectFilter
		#dataProviderClassName =
		defaultValue =
		filterIdentifier =
		label =
		fieldIdentifier =
		displayFields =
		filterField =
		multiple = 0
		excludeFilters =
		showRowCount = 1
		submitOnChange = 0
		inactiveOption =
		inactiveValue =
		invert = 0
		invertable = 0
		accessGroups =

		renderObj = TEXT
		renderObj {
			dataWrap = {field:allDisplayFields} ({field:rowCount})
		}

		breadCrumbString = TEXT
		breadCrumbString {
			# Fields that can be used are 'label' and 'value'
			dataWrap = {field:label} contains {field:value}
		}
	}



	checkbox {
		partialPath = Filter/Options/CheckBoxFilter
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_OptionsFilter
		#dataProviderClassName =

		# defaultValues are defined as array 10 = value, 20 = value or single value 20
		defaultValue =

		filterIdentifier =
		label =
		fieldIdentifier =
		displayFields =
		filterField =
		excludeFilters =
		showRowCount = 1
		submitOnChange = 0
		inactiveOption =
		inactiveValue =
		invert = 0
		invertable = 0
		accessGroups =

		renderObj = TEXT
		renderObj {
			dataWrap = {field:allDisplayFields} ({field:rowCount})
		}

		breadCrumbString = TEXT
		breadCrumbString {
			# Fields that can be used are 'label' and 'value'
			dataWrap = {field:label} contains {field:value}
		}
	}
	


	button {
		partialPath = Filter/Options/ButtonFilter
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_OptionsFilter
		#dataProviderClassName =

		# defaultValues are defined as array 10 = value, 20 = value or single value 20
		defaultValue =

		filterIdentifier =
		label =
		fieldIdentifier =
		displayFields =
		filterField =
		excludeFilters =
		showRowCount = 0
		inactiveOption =
		inactiveValue =
		invert = 0
		invertable = 0
		accessGroups =

		renderObj = TEXT
		renderObj {
			dataWrap = {field:allDisplayFields}
		}

		breadCrumbString = TEXT
		breadCrumbString {
			# Fields that can be used are 'label' and 'value'
			dataWrap = {field:label} contains {field:value}
		}
	}



	radiobutton {
		partialPath = Filter/Options/RadioButtonFilter
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_OptionsFilter
		#dataProviderClassName =

		# defaultValues are defined as array 10 = value, 20 = value or single value 20
		defaultValue =

		filterIdentifier =
		label =
		fieldIdentifier =
		displayFields =
		filterField =
		excludeFilters =
		showRowCount = 1
		submitOnChange = 0
		inactiveOption =
		inactiveValue =
		invert = 0
		invertable = 0
		accessGroups =

		renderObj = TEXT
		renderObj {
			# Fields that can be used are 'label' and 'value'
			dataWrap = {field:allDisplayFields} ({field:rowCount})
		}

		breadCrumbString = TEXT
		breadCrumbString {
			dataWrap = {field:label} equals {field:value}
		}
	}



	firstLetter {
		partialPath = Filter/Options/FirstLetterFilter
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_FirstLetterFilter
		dataProviderClassName = Tx_PtExtlist_Domain_Model_Filter_DataProvider_FirstLetter

		defaultValue =

		filterIdentifier =
		label =
		fieldIdentifier =
		displayFields =
		filterField =
		excludeFilters =
		showRowCount = 0
		inactiveOption = [ALL]
		inactiveValue =
		invert = 0
		invertable = 0
		accessGroups =

		renderObj = TEXT
		renderObj {
			dataWrap = {field:firstLetter}
		}

		breadCrumbString = TEXT
		breadCrumbString {
			# Fields that can be used are 'label' and 'value'
			dataWrap = {field:label} starts with '{field:value}'
		}
	}



	tagCloud {
		partialPath = Filter/Options/TagCloudFilter
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_TagCloudFilter
		dataProviderClassName = Tx_PtExtlist_Domain_Model_Filter_DataProvider_TagCloud
				
		filterIdentifier =
		label = 
		fieldIdentifier =
		countFieldIdentifier = 
		
		maxItems = 20
		
		minColor = #1c448d
		maxColor = #b8cffa
		
		# minSize / maxSize as fontSize in pixel 
		minSize = 9
		maxSize = 24
		
		renderObj = TEXT
		renderObj {
			dataWrap = {field:allDisplayFields}
		}
	}



	proxy {
		filterClassName = Tx_PtExtlist_Domain_Model_Filter_ProxyFilter
		partialPath = Filter/Special/ProxyFilter
		proxyPath = 
		fieldIdentifier =
	}
}