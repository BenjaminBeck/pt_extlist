# Use a own dispatcher for setting up a external database connection and a different mapper logic.
# ------------------------------------------------------------------------------------------------
#includeLibs.tx_ptextdb_dispatcher = EXT:pt_extdb/Classes/Dispatcher.php
#tt_content.list.20.ptextdb_pi1.userFunc = tx_ptextdb_dispatcher->dispatch

plugin.tx_ptextlist.settings {

    abc = 1

	listConfig.list1 {
	
	    abc = 2
	
		# config für extbase 
		#backendConfig {
		#		domainObject = FeUser	
		#}
	
		# config für dosGenerator
		backendConfig {
			#backend = [typo3|mysql|oracle|mssql|soap|textfile]
			# Does not work at the moment: 
			# backend = mysql
			
			#dataType =[extBase(default)|dataBase]
			# TODO think of some better syntax here...
            dataBackendClass = Tx_PtExtlist_Domain_DataBackend_DummyDataBackend
            dataSourceClass = Tx_PtExtlist_Domain_DataBackend_DataSource_DummyDataSource
            dataMapperClass = Tx_PtExtlist_Domain_DataBackend_Mapper_ArrayMapper
            queryInterpreterClassName = Tx_PtExtlist_Domain_DataBackend_MySqlDataBackend_MySqlInterpreter_MySqlInterpreter
			
			datasource {
				host = localhost
				username = typo3
				password = typo3
				database = typo3
				
				#filePath = ...
			}
			
			
			tables (
        		static_countries, 
                static_territories st_continent, 
                static_territories st_subcontinent
            )
            
            
            baseFromClause (
                ...
            )
            
            baseWhereClause (
                ...
            ) 
			
		}
		
		fields {
		    
			#name_local {
            #    table = static_countries
            #    field = cn_short_local
            #    
            #    # default for isSortable is "1"
            #    isSortable = 1
            #}
            
            #name_en {
            #    field = cn_short_en
            #    table = static_countries
            #}
            
            
            field1 { 
                table = t1
                field = f1
            }
            
            field2 { 
                table = t2
                field = f1
            }
            
		}
		
		columns {
			10 {
				label = COA
				label {
					10 = TEXT
					10.value = rendered Column 1
					10.case = upper
				}
				
				columnIdentifier = renderedCol1
				fieldIdentifier = field1
				
				dataDescriptionIdentifier = 
				sortingDataDescription
			}
			
			20 {
				label = Column 2
				columnIdentifier = renderedCol2
				fieldIdentifier = field2
				
				renderObj = COA
				renderObj {
					
					
					10 = TEXT
					10.data = field:field1
					
					15 = TEXT
					15.value = ...
					
					20 = TEXT
					20.data = field:field2
					20.case = upper
				}
				
				stdWrap.wrap = _|_
			}
		}
		
		renderer {
			enabled = 1
			showCaptionsInBody = 0
			rendererClassName = Tx_PtExtlist_Domain_Renderer_DefaultRenderer
		}
		
		filters {
			filterbox1 {
			    10 {
			        filterIdentifier = filter1
			        filterClassName = Tx_PtExtlist_Domain_Model_Filter_StringFilter
			        label = Stringfilter 1
			        defaultValue = DefaultString
			    }
			    
			    20 {
			        filterIdentifier = filter2
			        filterClassName = Tx_PtExtlist_Domain_Model_Filter_StringFilter
			        label = Stringfilter 2
			    }
			
			}
		}
		
		pagerConfig {
			enabled = 1
			pagerClassName = Tx_PtExtlist_Domain_Model_Pager_DefaultPager
			itemsPerPage = 2
			
			showNextLink = 1
			showPreviousLink = 1
			showFirstLink = 1
			showLastLink = 1
		}
	
	}
}
